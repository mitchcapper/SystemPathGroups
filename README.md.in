<!-- README.md is auto generated by Build-Readme.ps1 do not update it manually -->
# SystemPathGroups

[![Build and Test](https://github.com/mitchcapper/SystemPathGroups/actions/workflows/build.yaml/badge.svg)](https://github.com/mitchcapper/SystemPathGroups/actions/workflows/build.yaml)

PowerShell module for managing grouped paths in Windows PATH environment variable.  This was developed for the Github Actions Runner team to hopefully encourage them to implement better practices to avoid path pollution.  At runner build time all the Paths are added to the system path var using `Add-ToPath` which then would allow for an easy github action that the user could use to either remove all default paths and add specific ones (best practice) or at least remove problematic ones from the path.  This was mostly generated by GitHub Co-pilot / Aider.

## Table Of Contents
<!-- MarkdownTOC -->
- [Features](#features)
- [Configuration](#configuration)
- [Installation](#installation)
- [Cmdlet Reference](#cmdlet-reference)
[TOC_ADDITIONAL]
<!-- /MarkdownTOC -->

## Simple Example
During initial platform image build add python and msys path options to the known path configuration, by default these are added to the system path too
```powershell
Add-ToPath -PathGroup Python -NewPath c:\python312
Add-ToPath -PathGroup Python -NewPath $env:LOCALAPPDATA\Programs\Python\Python312\Scripts
Add-ToPath -PathGroup MSYS64 -NewPath c:\msys64\ucrt64\bin
Add-ToPath -PathGroup MSYS64Nightly -NewPath c:\msys64-nightly\ucrt64\bin -AddToSystemPath $false
```

Then users could call:
```powershell
Remove-PathGroupsFromPath
Add-PathGroupsToPath Python MSYS64Nightly
```
Which would remove all known groups from the path by default and only add the ones the user cares about.

Otherwise if they just want to remove one problematic package in the default system path:
```powershell
Remove-PathGroupsFromPath MSYS64
```

## Features
- Group-based path management
- Persistent path configuration storage
- Support for paths with spaces and special characters
- Case-preserving path handling
- Forward/backward slash normalization
- Handles duplicate path prevention

## Configuration
- Paths are stored in: $env:ProgramData\SystemPathGroups\paths.json


## Installation

```powershell
Install-Module -Name SystemPathGroups
```

## Usage
